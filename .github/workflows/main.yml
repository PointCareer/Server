name: PointCareer CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set permission for Gradle
        run: chmod +x ./gradlew

      - name: Build Spring Boot (without test)
        run: ./gradlew clean build --exclude-task test

      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_DEV_USERNAME }}
          password: ${{ secrets.DOCKERHUB_DEV_TOKEN }}

      - name: Build & Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_DEV_USERNAME }}/point-career:latest .
          docker push ${{ secrets.DOCKERHUB_DEV_USERNAME }}/point-career:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: ${{ secrets.AWS_ACCESS_ROLE_NAME }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_SSH_PORT }}
          timeout: 60s
          script: |
            cd /home/ubuntu/point-career
            echo "DockerHub login"
            sudo docker login -u ${{ secrets.DOCKERHUB_DEV_USERNAME }} -p ${{ secrets.DOCKERHUB_DEV_TOKEN }}

            echo "Stopping and removing existing containers"
            sudo docker-compose down

            echo "Pulling latest image"
            sudo docker pull ${{ secrets.DOCKERHUB_DEV_USERNAME }}/point-career:latest

            echo "Starting new containers"
            sudo docker-compose up -d

            echo "Removing dangling images"
            sudo docker image prune -f
